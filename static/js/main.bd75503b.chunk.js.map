{"version":3,"sources":["bp.png","components/Sample.js","App.js","reportWebVitals.js","index.js"],"names":["Sample","useState","visible","setVisible","TabPane","Tabs","Countdown","Statistic","deadline","Date","now","type","icon","MenuOutlined","id","size","onClick","title","placement","closable","onClose","width","defaultActiveKey","onChange","key","console","log","tab","gutter","span","value","precision","valueStyle","color","prefix","ArrowUpOutlined","suffix","ArrowDownOutlined","onFinish","format","val","percent","status","steps","Item","App","record","setRecord","file","setFile","isModalVisible","setIsModalVisible","Header","Layout","Footer","Sider","Content","contentStyle","height","lineHeight","textAlign","background","content","useEffect","className","src","logo","alt","onStop","recordedBlob","blobURL","onData","strokeColor","backgroundColor","shape","AudioTwoTone","onMouseDown","onMouseUp","autoplay","style","QuestionOutlined","onOk","onCancel","notification","open","message","description","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd75503b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bp.2d68a791.png\";","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Divider,\r\n  Button,\r\n  Layout,\r\n  Modal,\r\n  Carousel,\r\n  Popover,\r\n  Drawer,\r\n  notification,\r\n  Statistic,\r\n  Row,\r\n  Col,\r\n  Tabs,\r\n  Card,\r\n  Progress,\r\n  Timeline \r\n} from \"antd\";\r\nimport {\r\n  AudioTwoTone,\r\n  QuestionOutlined,\r\n  MenuOutlined,\r\n  ArrowUpOutlined,\r\n  ArrowDownOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nexport default function Sample() {\r\n  function callback(key) {\r\n    console.log(key);\r\n  }\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const { TabPane } = Tabs;\r\n\r\n  const { Countdown } = Statistic;\r\n  const deadline = Date.now() + 1000 * 60 * 60 * 24 * 2 + 1000 * 30; // Moment is also OK\r\n\r\n  function onFinish() {\r\n    console.log(\"finished!\");\r\n  }\r\n\r\n  function onChange(val) {\r\n    if (4.95 * 1000 < val && val < 5 * 1000) {\r\n      console.log(\"changed!\");\r\n    }\r\n    function callback(key) {\r\n      console.log(key);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"primary\"\r\n        icon={<MenuOutlined id=\"aud\" />}\r\n        size=\"middle\"\r\n        id=\"menu\"\r\n        onClick={showDrawer}\r\n      />\r\n      <Drawer\r\n        title=\"Sample Output\"\r\n        placement=\"left\"\r\n        closable={false}\r\n        onClose={onClose}\r\n        visible={visible}\r\n        width={1000}\r\n      >\r\n        <Tabs defaultActiveKey=\"1\" onChange={callback}>\r\n          <TabPane tab=\"Statitics\" key=\"1\">\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Card>\r\n                  <Statistic\r\n                    title=\"Active\"\r\n                    value={11.28}\r\n                    precision={2}\r\n                    valueStyle={{ color: \"#3f8600\" }}\r\n                    prefix={<ArrowUpOutlined />}\r\n                    suffix=\"%\"\r\n                  />\r\n                </Card>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Card>\r\n                  <Statistic\r\n                    title=\"Idle\"\r\n                    value={9.3}\r\n                    precision={2}\r\n                    valueStyle={{ color: \"#cf1322\" }}\r\n                    prefix={<ArrowDownOutlined />}\r\n                    suffix=\"%\"\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Countdown\r\n                  title=\"Countdown\"\r\n                  value={deadline}\r\n                  onFinish={onFinish}\r\n                />\r\n              </Col>\r\n              <Col span={12}>\r\n                <Countdown\r\n                  title=\"Million Seconds\"\r\n                  value={deadline}\r\n                  format=\"HH:mm:ss:SSS\"\r\n                />\r\n              </Col>\r\n              <Col span={12}>\r\n                <Countdown\r\n                  title=\"Countdown\"\r\n                  value={Date.now() + 10 * 1000}\r\n                  onChange={onChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            ,\r\n          </TabPane>\r\n          <TabPane tab=\"Progress\" key=\"2\">\r\n            <Progress percent={30} />\r\n            <Progress percent={50} status=\"active\" />\r\n            <br />\r\n            <br />\r\n            <Progress percent={70} status=\"exception\" />\r\n            <Progress percent={100} />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <Progress type=\"circle\" percent={75} />\r\n            <Progress type=\"circle\" percent={70} status=\"exception\" />\r\n            <Progress type=\"circle\" percent={100} />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <Progress percent={30} steps={5} />\r\n            <Progress percent={50} steps={3} />\r\n          </TabPane>\r\n          <TabPane tab=\"Timeline\" key=\"3\">\r\n            <Timeline>\r\n              <Timeline.Item color=\"green\">\r\n                Create a services site 2015-09-01\r\n              </Timeline.Item>\r\n              <Timeline.Item color=\"green\">\r\n                Create a services site 2015-09-01\r\n              </Timeline.Item>\r\n              <Timeline.Item color=\"red\">\r\n                <p>Solve initial network problems 1</p>\r\n                <p>Solve initial network problems 2</p>\r\n                <p>Solve initial network problems 3 2015-09-01</p>\r\n              </Timeline.Item>\r\n              <Timeline.Item>\r\n                <p>Technical testing 1</p>\r\n                <p>Technical testing 2</p>\r\n                <p>Technical testing 3 2015-09-01</p>\r\n              </Timeline.Item>\r\n              <Timeline.Item color=\"gray\">\r\n                <p>Technical testing 1</p>\r\n                <p>Technical testing 2</p>\r\n                <p>Technical testing 3 2015-09-01</p>\r\n              </Timeline.Item>\r\n              <Timeline.Item color=\"gray\">\r\n                <p>Technical testing 1</p>\r\n                <p>Technical testing 2</p>\r\n                <p>Technical testing 3 2015-09-01</p>\r\n              </Timeline.Item>\r\n            </Timeline>\r\n            ,\r\n          </TabPane>\r\n        </Tabs>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import logo from \"./bp.png\";\r\nimport \"./App.css\";\r\nimport React  from \"react\";\r\nimport { ReactMic } from \"react-mic\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Divider,\r\n  Button,\r\n  Layout,\r\n  Modal,\r\n  Carousel,\r\n  Popover,\r\n  Drawer,\r\n  notification,\r\n   \r\n} from \"antd\";\r\nimport { AudioTwoTone, QuestionOutlined ,MenuOutlined} from \"@ant-design/icons\";\r\nimport Sample from './components/Sample'\r\n\r\nexport default function App() {\r\n  const [record, setRecord] = useState(false);\r\n  const [file, setFile] = useState(\"waiting\");\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const { Header, Footer, Sider, Content } = Layout;\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const openNotification = () => {\r\n    notification.open({\r\n      message: \"Notification Title\",\r\n      description:\r\n        \"This is the content of the notification. This is the content of the notification. This is the content of the notification.\",\r\n      onClick: () => {\r\n        console.log(\"Notification Clicked!\");\r\n      },\r\n    });\r\n  };\r\n  const contentStyle = {\r\n    height: \"90px\",\r\n    color: \"#fff\",\r\n    lineHeight: \"90px\",\r\n    textAlign: \"center\",\r\n    background: \"green\",\r\n  };\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const content = (\r\n    <div>\r\n      <p>Don't be shy! say something! </p>\r\n    </div>\r\n  );\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    openNotification();\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  function startRecording() {\r\n    setRecord(true);\r\n  }\r\n\r\n  function stopRecording() {\r\n    setRecord(false);\r\n  }\r\n\r\n  function onData(recordedBlob) {\r\n    console.log(\"chunk of real-time data is: \", recordedBlob);\r\n  }\r\n\r\n  function onStop(recordedBlob) {\r\n    setFile(recordedBlob.blobURL);\r\n    setIsModalVisible(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header className=\"header\">\r\n        <h2 id=\"headerText\">BP Voice Interface</h2>\r\n      </Header>\r\n\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\r\n      <Divider />\r\n\r\n      <h2>Hold for Voice Command</h2>\r\n\r\n      <ReactMic\r\n        record={record}\r\n        className=\"sound-wave\"\r\n        onStop={onStop}\r\n        onData={onData}\r\n        strokeColor=\"green\"\r\n        backgroundColor=\"white\"\r\n      />\r\n\r\n      <br />\r\n      <Popover content={content}>\r\n        <Button\r\n          shape=\"circle\"\r\n          icon={<AudioTwoTone id=\"aud\" />}\r\n          size=\"large\"\r\n          onMouseDown={startRecording}\r\n          onMouseUp={stopRecording}\r\n        />\r\n      </Popover>\r\n\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n      <Carousel autoplay>\r\n        <div>\r\n          <h3 style={contentStyle}>\r\n            You can say: Show me the map for Wind Farm\r\n          </h3>\r\n        </div>\r\n        <div>\r\n          <h3 style={contentStyle}>\r\n            You can say: Show me the Schematics for Wind Turbine\r\n          </h3>\r\n        </div>\r\n        <div>\r\n          <h3 style={contentStyle}>\r\n            You can say: Who is the best team for Grand Challenge?\r\n          </h3>\r\n        </div>\r\n      </Carousel>\r\n\r\n      <Footer>@2021 Bestest Team</Footer>\r\n\r\n      <Sample />\r\n\r\n\r\n      {/* <Button type=\"primary\" icon={<MenuOutlined id='aud'/>} size='middle' id='menu'/> */}\r\n\r\n      <Popover\r\n        content={\r\n          <div>Help\r\n          </div>\r\n        }\r\n      >\r\n        <Button\r\n          type=\"primary\"\r\n          shape=\"circle\"\r\n          size=\"large\"\r\n          id=\"help\"\r\n          icon={<QuestionOutlined id=\"aud\" />}\r\n          onClick={showDrawer}\r\n        />\r\n      </Popover>\r\n\r\n      <Drawer\r\n        title=\"Help\"\r\n        placement=\"right\"\r\n        closable={false}\r\n        onClose={onClose}\r\n        visible={visible}\r\n      >\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n      </Drawer>\r\n\r\n      <Modal\r\n        title=\"Voice Command\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        width={1100}\r\n      >\r\n        <iframe src={file} id=\"myHide\" />\r\n        <iframe\r\n          src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d27702.085128008992!2d-95.6353049!3d29.784562!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x7d423a5fdf0dbbad!2sbp%20Center%20For%20High%20Performance%20Computing!5e0!3m2!1sen!2sus!4v1623265059348!5m2!1sen!2sus\"\r\n          id=\"map\"\r\n        />\r\n      </Modal>\r\n\r\n\r\n\r\n      {/* <span>link to voice file: </span>\r\n      <a href={file}>{file}</a> */}\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}