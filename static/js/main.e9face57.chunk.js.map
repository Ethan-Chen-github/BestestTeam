{"version":3,"sources":["components/bp.png","components/Demo.js","components/AWSLEX.js","App.js","reportWebVitals.js","index.js"],"names":["App","useState","record","setRecord","file","setFile","isModalVisible","setIsModalVisible","Layout","Header","Footer","Sider","Content","visible","setVisible","content","useEffect","className","src","logo","alt","onStop","recordedBlob","blobURL","onData","console","log","strokeColor","backgroundColor","mimeType","shape","icon","AudioTwoTone","id","size","onMouseDown","onMouseUp","type","QuestionOutlined","onClick","title","placement","closable","onClose","onOk","onCancel","width","botName","setBotName","poolId","setPoolId","region","setRegion","frameBorder","allow","allowFullScreen","name","initialValues","remember","onFinish","values","Item","label","rules","required","message","placeholder","htmlType","current","setCurrent","JSON","parse","localStorage","getItem","user","setUser","contentStyle","height","color","lineHeight","textAlign","background","footer","setItem","stringify","onConfirm","e","clear","okText","cancelText","MenuOutlined","style","padding","marginTop","autoplay","trigger","key","selectedKeys","mode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9face57.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bp.2d68a791.png\";","import logo from \"./bp.png\";\r\nimport \"../App.css\";\r\nimport React from \"react\";\r\nimport { ReactMic } from \"react-mic\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Divider,\r\n  Button,\r\n  Layout,\r\n  Modal,\r\n  Carousel,\r\n  Popover,\r\n  Drawer,\r\n  notification,\r\n} from \"antd\";\r\nimport {\r\n  AudioTwoTone,\r\n  QuestionOutlined,\r\n  MenuOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Sample from \"./Demo_Sub\";\r\n\r\nexport default function App() {\r\n  const [record, setRecord] = useState(false);\r\n  const [file, setFile] = useState(\"waiting\");\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const { Header, Footer, Sider, Content } = Layout;\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const openNotification = () => {\r\n    notification.open({\r\n      message: \"Notification Title\",\r\n      description:\r\n        \"This is the content of the notification. This is the content of the notification. This is the content of the notification.\",\r\n      onClick: () => {\r\n        console.log(\"Notification Clicked!\");\r\n      },\r\n    });\r\n  };\r\n  const contentStyle = {\r\n    height: \"90px\",\r\n    color: \"#fff\",\r\n    lineHeight: \"90px\",\r\n    textAlign: \"center\",\r\n    background: \"green\",\r\n  };\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const content = (\r\n    <div>\r\n      <p>Don't be shy! say something! </p>\r\n    </div>\r\n  );\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    // openNotification();\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  function startRecording() {\r\n    setRecord(true);\r\n  }\r\n\r\n  function stopRecording() {\r\n    setRecord(false);\r\n  }\r\n\r\n  function onData(recordedBlob) {\r\n    console.log(\"chunk of real-time data is: \", recordedBlob);\r\n  }\r\n\r\n  function onStop(recordedBlob) {\r\n    setFile(recordedBlob.blobURL);\r\n    setIsModalVisible(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\r\n      <Divider />\r\n\r\n      <h2>Hold to Record Voice Command</h2>\r\n\r\n      <ReactMic\r\n        record={record}\r\n        className=\"sound-wave\"\r\n        onStop={onStop}\r\n        onData={onData}\r\n        strokeColor=\"green\"\r\n        backgroundColor=\"white\"\r\n        mimeType=\"audio/mp3\"\r\n      />\r\n\r\n      <br />\r\n      <Popover content={content}>\r\n        <Button\r\n          shape=\"circle\"\r\n          icon={<AudioTwoTone id=\"aud\" />}\r\n          size=\"large\"\r\n          onMouseDown={startRecording}\r\n          onMouseUp={stopRecording}\r\n        />\r\n      </Popover>\r\n\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n\r\n      {/* <Sample />   */}\r\n\r\n      {/* <Button type=\"primary\" icon={<MenuOutlined id='aud'/>} size='middle' id='menu'/> */}\r\n\r\n      <Popover content={<div>Help</div>}>\r\n        <Button\r\n          type=\"primary\"\r\n          shape=\"circle\"\r\n          size=\"large\"\r\n          id=\"help\"\r\n          icon={<QuestionOutlined id=\"aud\" />}\r\n          onClick={showDrawer}\r\n        />\r\n      </Popover>\r\n\r\n      <Drawer\r\n        title=\"Help\"\r\n        placement=\"right\"\r\n        closable={false}\r\n        onClose={onClose}\r\n        visible={visible}\r\n      >\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n      </Drawer>\r\n\r\n      <Modal\r\n        title=\"Voice Command\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        width={1100}\r\n      >\r\n        <iframe src={file}  />\r\n        {/* <iframe\r\n          src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d27702.085128008992!2d-95.6353049!3d29.784562!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x7d423a5fdf0dbbad!2sbp%20Center%20For%20High%20Performance%20Computing!5e0!3m2!1sen!2sus!4v1623265059348!5m2!1sen!2sus\"\r\n          id=\"map\"\r\n        /> */}\r\n      </Modal>\r\n\r\n      {/* <span>link to voice file: </span>\r\n      <a href={file}>{file}</a> */}\r\n    </div>\r\n  );\r\n}\r\n","import logo from \"./bp.png\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Divider, Button, Input, Form, Checkbox, Popover} from \"antd\";\r\nimport {\r\n  AudioTwoTone,\r\n  QuestionOutlined,\r\n  MenuOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nexport default function App() {\r\n  const [botName, setBotName] = useState(\"\");\r\n  const [poolId, setPoolId] = useState(\"\");\r\n  const [region, setRegion] = useState(\"\");\r\n\r\n  const onFinish = (values) => {\r\n    setBotName(values[\"botName\"]);\r\n    setPoolId(values[\"poolId\"]);\r\n    setRegion(values[\"region\"]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <br />\r\n\r\n      <iframe\r\n        frameBorder=\"0\"\r\n        src=\"http://localhost:8000/\"\r\n        allow=\"camera;microphone\"\r\n        allowFullScreen\r\n        id=\"map\"\r\n      />\r\n\r\n      {botName !== \"\" && poolId !== \"\" && region !== \"\" ? (\r\n        <>\r\n          <iframe\r\n            frameBorder=\"0\"\r\n            src=\"http://localhost:8000/\"\r\n            allow=\"camera;microphone\"\r\n            id=\"map\"\r\n          />\r\n          <div>Your BotName: {botName}</div>\r\n          <div>Your PoolID: {poolId}</div>\r\n          <div>Your Region: {region}</div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Form\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item\r\n              label=\"botName\"\r\n              name=\"botName\"\r\n              rules={[\r\n                { required: true, message: \"Please input your botName!\" },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Wendy\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"poolId\"\r\n              name=\"poolId\"\r\n              rules={[{ required: true, message: \"Please input your poolId!\" }]}\r\n            >\r\n              <Input placeholder=\"us-west-2:xxxxx-xxxx-xxxx-xxxx-xxxxxxx\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"region\"\r\n              name=\"region\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your region! ex: us-west-2\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"us-west-2\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" id = 'bp-but'>\r\n                Start Lex Bot\r\n              </Button>\r\n              <Popover content={<div>Help</div>}>\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"circle\"\r\n              size=\"large\"\r\n              id='helpLex'\r\n              icon={<QuestionOutlined id=\"aud\" />}\r\n            />\r\n          </Popover>\r\n            </Form.Item>\r\n          </Form>\r\n\r\n        </>\r\n      )}\r\n\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { Layout, Menu, Breadcrumb } from \"antd\";\r\nimport VoiceFlow from \"./components/VoiceFlow\";\r\nimport Demo from \"./components/Demo\";\r\nimport {\r\n  Carousel,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Popconfirm,\r\n  message,\r\n  Content,\r\n  Drawer,\r\n} from \"antd\";\r\nimport AWSLEX from \"./components/AWSLEX\";\r\nimport {\r\n  AudioTwoTone,\r\n  QuestionOutlined,\r\n  MenuOutlined,\r\n  ArrowUpOutlined,\r\n  ArrowDownOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nexport default function App() {\r\n  const [current, setCurrent] = useState(\"awslex\");\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"user\")));\r\n  const [isModalVisible, setIsModalVisible] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const { Header, Footer, Sider, Content } = Layout;\r\n\r\n  const contentStyle = {\r\n    height: \"90px\",\r\n    color: \"#fff\",\r\n    lineHeight: \"90px\",\r\n    textAlign: \"center\",\r\n    background: \"green\",\r\n  };\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  function handleClick(e) {\r\n    setCurrent(e.key);\r\n    setVisible(false);\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    setUser(values[\"userName\"]);\r\n    localStorage.setItem(\"user\", JSON.stringify(values[\"userName\"]));\r\n  };\r\n\r\n  function confirm(e) {\r\n    setUser(\"\");\r\n    localStorage.clear();\r\n  }\r\n\r\n  function cancel(e) {\r\n    console.log(e);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!user && (\r\n        <Modal\r\n          title=\"Please enter your user name\"\r\n          visible={isModalVisible}\r\n          onCancel={handleCancel}\r\n          footer={null}\r\n          width={500}\r\n        >\r\n          <Form\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item\r\n              label=\"userName\"\r\n              name=\"userName\"\r\n              rules={[\r\n                { required: true, message: \"Please input your user name!\" },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Billy\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" id = 'bp-but'>\r\n                Sign In\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      )}\r\n\r\n      <Header className=\"header\">\r\n        <span id=\"headerText\">BP Voice Interface</span>\r\n        <Popconfirm\r\n          title=\"Are you sure to sign out?\"\r\n          onConfirm={confirm}\r\n          onCancel={cancel}\r\n          okText=\"Yes\"\r\n          cancelText=\"No\"\r\n        >\r\n          <span id=\"user\">Hi , {user}</span>\r\n        </Popconfirm>\r\n        <span id=\"menuBut\">\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<MenuOutlined id=\"aud\" />}\r\n            size=\"middle\"\r\n            id=\"bp-but\"\r\n            onClick={showDrawer}\r\n          />\r\n        </span>\r\n      </Header>\r\n      <Content\r\n        className=\"site-layout\"\r\n        style={{ padding: \"0 50px\", marginTop: 0 }}\r\n      >\r\n        {current == \"awslex\" ? <AWSLEX /> : <Demo />}\r\n      </Content>\r\n      <Carousel autoplay>\r\n        <div>\r\n          <h3 style={contentStyle}>\r\n            You can say: Show me the map for Wind Farm\r\n          </h3>\r\n        </div>\r\n        <div>\r\n          <h3 style={contentStyle}>\r\n            You can say: Show me the Schematics for Wind Turbine\r\n          </h3>\r\n        </div>\r\n      </Carousel>\r\n\r\n      <Footer style={{ textAlign: \"center\" }}>\r\n        Bestest Microsoft Edgies Team @2021{\" \"}\r\n      </Footer>\r\n\r\n      <Drawer\r\n        title=\"Menu\"\r\n        placement=\"left\"\r\n        closable={false}\r\n        onClose={onClose}\r\n        visible={visible}\r\n        width={230}\r\n      >\r\n        <Sider trigger={null}>\r\n          <Menu onClick={handleClick} selectedKeys={[current]} mode=\"inline\">\r\n            <Menu.Item key=\"awslex\">AWS Lex</Menu.Item>\r\n            <Menu.Item key=\"demo\">VoiceNote</Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}