{"version":3,"sources":["bp.png","App.js","reportWebVitals.js","index.js"],"names":["App","useState","record","setRecord","file","setFile","isModalVisible","setIsModalVisible","Header","Layout","Footer","Sider","Content","visible","setVisible","contentStyle","height","color","lineHeight","textAlign","background","content","useEffect","className","id","src","logo","alt","onStop","recordedBlob","blobURL","onData","console","log","strokeColor","backgroundColor","shape","icon","AudioTwoTone","size","onMouseDown","onMouseUp","autoplay","style","type","QuestionOutlined","onClick","title","placement","closable","onClose","onOk","onCancel","notification","open","message","description","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAAe,MAA0B,+B,+GCiB1B,SAASA,IAAO,IAAD,EACAC,oBAAS,GADT,mBACrBC,EADqB,KACbC,EADa,OAEJF,mBAAS,WAFL,mBAErBG,EAFqB,KAEfC,EAFe,OAGgBJ,oBAAS,GAHzB,mBAGrBK,EAHqB,KAGLC,EAHK,KAKpBC,EAAmCC,IAAnCD,OAAQE,EAA2BD,IAA3BC,OALY,GAKeD,IAAnBE,MAAmBF,IAAZG,QACDX,oBAAS,IANX,mBAMrBY,EANqB,KAMZC,EANY,KAkBtBC,EAAe,CACnBC,OAAQ,OACRC,MAAO,OACPC,WAAY,OACZC,UAAW,SACXC,WAAY,SAURC,EACJ,8BACE,gEAoCJ,OAnBAC,qBAAU,cAAU,IAoBlB,sBAAKC,UAAU,MAAf,UACE,cAACf,EAAD,CAAQe,UAAU,SAAlB,SACE,oBAAIC,GAAG,aAAP,kCAGF,qBAAKC,IAAKC,EAAMH,UAAU,WAAWI,IAAI,SAEzC,cAAC,IAAD,IAEA,wDAEA,cAAC,WAAD,CACEzB,OAAQA,EACRqB,UAAU,aACVK,OApBN,SAAgBC,GACdxB,EAAQwB,EAAaC,SACrBvB,GAAkB,IAmBdwB,OAzBN,SAAgBF,GACdG,QAAQC,IAAI,+BAAgCJ,IAyBxCK,YAAY,QACZC,gBAAgB,UAGlB,uBACA,cAAC,IAAD,CAASd,QAASA,EAAlB,SACE,cAAC,IAAD,CACEe,MAAM,SACNC,KAAM,cAACC,EAAA,EAAD,CAAcd,GAAG,QACvBe,KAAK,QACLC,YA5CR,WACErC,GAAU,IA4CJsC,UAzCR,WACEtC,GAAU,QA4CR,uBACA,uBACA,uBAEA,eAAC,IAAD,CAAUuC,UAAQ,EAAlB,UACE,8BACE,oBAAIC,MAAO5B,EAAX,0DAIF,8BACE,oBAAI4B,MAAO5B,EAAX,oEAIF,8BACE,oBAAI4B,MAAO5B,EAAX,yEAMJ,cAACL,EAAD,iCAEA,cAAC,IAAD,CAAQkC,KAAK,UAAUR,MAAM,SAASG,KAAK,QAAQf,GAAG,OAAOa,KAAM,cAACQ,EAAA,EAAD,CAAkBrB,GAAG,QAAQsB,QArGjF,WACjBhC,GAAW,MAqGT,eAAC,IAAD,CACEiC,MAAM,OACNC,UAAU,QACVC,UAAU,EACVC,QAvGU,WACdpC,GAAW,IAuGPD,QAASA,EALX,UAOE,iDACA,iDACA,oDAGF,eAAC,IAAD,CACEkC,MAAM,gBACNlC,QAASP,EACT6C,KAxGW,WACf5C,GAAkB,IAwGd6C,SArGe,WACnB7C,GAAkB,GAnClB8C,IAAaC,KAAK,CAChBC,QAAS,qBACTC,YACE,6HACFV,QAAS,WACPd,QAAQC,IAAI,6BAmIZwB,MAAO,KALT,UAOE,wBAAQhC,IAAKrB,EAAMoB,GAAG,WACtB,wBACEC,IAAI,oQACJD,GAAG,cCvKb,IAYekC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3f497559.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bp.2d68a791.png\";","import logo from \"./bp.png\";\r\nimport \"./App.css\";\r\nimport { React } from \"react\";\r\nimport { ReactMic } from \"react-mic\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Divider,\r\n  Button,\r\n  Layout,\r\n  Modal,\r\n  Carousel,\r\n  Popover,\r\n  Drawer,\r\n  notification,\r\n} from \"antd\";\r\nimport { AudioTwoTone ,QuestionOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function App() {\r\n  const [record, setRecord] = useState(false);\r\n  const [file, setFile] = useState(\"waiting\");\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const { Header, Footer, Sider, Content } = Layout;\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const openNotification = () => {\r\n    notification.open({\r\n      message: 'Notification Title',\r\n      description:\r\n        'This is the content of the notification. This is the content of the notification. This is the content of the notification.',\r\n      onClick: () => {\r\n        console.log('Notification Clicked!');\r\n      },\r\n    });\r\n  };\r\n  const contentStyle = {\r\n    height: \"90px\",\r\n    color: \"#fff\",\r\n    lineHeight: \"90px\",\r\n    textAlign: \"center\",\r\n    background: \"green\",\r\n  };\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const content = (\r\n    <div>\r\n      <p>Don't be shy! say something! </p>\r\n    </div>\r\n  );\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    openNotification();\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  function startRecording() {\r\n    setRecord(true);\r\n  }\r\n\r\n  function stopRecording() {\r\n    setRecord(false);\r\n  }\r\n\r\n  function onData(recordedBlob) {\r\n    console.log(\"chunk of real-time data is: \", recordedBlob);\r\n  }\r\n\r\n  function onStop(recordedBlob) {\r\n    setFile(recordedBlob.blobURL);\r\n    setIsModalVisible(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header className=\"header\">\r\n        <h2 id=\"headerText\">BP Voice Interface</h2>\r\n      </Header>\r\n\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\r\n      <Divider />\r\n\r\n      <h2>Hold for Voice Command</h2>\r\n\r\n      <ReactMic\r\n        record={record}\r\n        className=\"sound-wave\"\r\n        onStop={onStop}\r\n        onData={onData}\r\n        strokeColor=\"green\"\r\n        backgroundColor=\"white\"\r\n      />\r\n\r\n      <br />\r\n      <Popover content={content}>\r\n        <Button\r\n          shape=\"circle\"\r\n          icon={<AudioTwoTone id=\"aud\" />}\r\n          size=\"large\"\r\n          onMouseDown={startRecording}\r\n          onMouseUp={stopRecording}\r\n        />\r\n      </Popover>\r\n\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n      <Carousel autoplay>\r\n        <div>\r\n          <h3 style={contentStyle}>\r\n            You can say: Show me the map for Wind Farm\r\n          </h3>\r\n        </div>\r\n        <div>\r\n          <h3 style={contentStyle}>\r\n            You can say: Show me the Schematics for Wind Turbine\r\n          </h3>\r\n        </div>\r\n        <div>\r\n          <h3 style={contentStyle}>\r\n            You can say: Who is the best team for Grand Challenge?\r\n          </h3>\r\n        </div>\r\n      </Carousel>\r\n\r\n      <Footer>@2021 Bestest Team</Footer>\r\n\r\n      <Button type=\"primary\" shape=\"circle\" size=\"large\" id='help' icon={<QuestionOutlined id='aud'/>}onClick={showDrawer}/>\r\n      <Drawer\r\n        title=\"Help\"\r\n        placement=\"right\"\r\n        closable={false}\r\n        onClose={onClose}\r\n        visible={visible}\r\n      >\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n      </Drawer>\r\n\r\n      <Modal\r\n        title=\"Voice Command\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        width={1100}\r\n      >\r\n        <iframe src={file} id=\"myHide\" />\r\n        <iframe\r\n          src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d27702.085128008992!2d-95.6353049!3d29.784562!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x7d423a5fdf0dbbad!2sbp%20Center%20For%20High%20Performance%20Computing!5e0!3m2!1sen!2sus!4v1623265059348!5m2!1sen!2sus\"\r\n          id=\"map\"\r\n        />\r\n      </Modal>\r\n\r\n      \r\n\r\n      {/* <span>link to voice file: </span>\r\n      <a href={file}>{file}</a> */}\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}